{"version":3,"sources":["email.js","index.js"],"names":["SendEmail","props","state","email","handleFilterTextChange","bind","e","this","setState","target","value","className","text","type","onChange","placeholder","onClick","console","log","emailjs","init","params","date","list","sendEmail","React","Component","SearchBar","filterText","ToggleButton","btnToggled","toggleButton","toLowerCase","label","handleClick","ProductRow","isClicked","name","ProductTable","productRows","i","products","includes","category","clicked","selectedProducts","key","length","QuantityCounter","hidden","hover","counterChangeAdd","counterChangeRemove","quantity","ShoppingListRow","handleMouseEnter","handleMouseLeave","content","index","findIndexByName","product","components","hasOwnProperty","onMouseEnter","onMouseLeave","ShoppingList","productName","a","b","whatRowType","action","counterChange","PRODUCTS","sort","compareByName","OnlyProductsRow","OnlyProducts","onlyProductsList","push","j","ingNam","ingQty","selectedQty","App","previewShown","selectedProduct","concat","updatedList1","slice","updatedList2","updatedList","counter","input","clear","contentToShow","selectingProduct","removeProduct","id","whatLabel","ingNam0","ingQty0","ingNam1","ingQty1","ingNam2","ingQty2","ingNam3","ingQty3","ingNam4","ingQty4","shopPosition1","shopPosition2","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6c06952.chunk.js","sourcesContent":["import React from 'react';\r\nimport emailjs from 'emailjs-com';\r\n\r\nfunction sendEmail(email) {\r\n  console.log(\"Email sent!\");\r\n  emailjs.init(\"user_I78KDOjHq76yf6MNc8KLo\");\r\n\r\n  var params = {\r\n    date: '20.11.2019',\r\n    //list: 'Jajka 50\\nCebula 30\\nPiwo 2',\r\n    list: 'Jajka 50\\nCebula 30\\nPiwo 2',\r\n    email: email,\r\n  };\r\n\r\n  console.log(params)\r\n\r\n/*  emailjs.send('zakupywlidlu71_gmail_com', 'shoppinglistapp', params)\r\n    .then(function(response) {\r\n      console.log('SUCCESS!', response.status, response.text);\r\n    }, function(error) {\r\n      console.log('FAILED...', error);\r\n    });*/\r\n\r\n}\r\n\r\nclass SendEmail extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n    };\r\n\r\n    this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\r\n  }\r\n\r\n  handleFilterTextChange(e) {\r\n    this.setState({email: e.target.value});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-8\">\r\n          <input value={this.state.text} type=\"email\" onChange={(e) => this.handleFilterTextChange(e)} className=\"form-control\" placeholder=\"e-mail\"/>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <button className={\"btn btn-look btn-block\"} onClick={() => sendEmail(this.state.email)}>Send</button>\r\n        </div>\r\n      </div>\r\n\r\n   )\r\n  }\r\n}\r\n\r\nexport default SendEmail;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SendEmail from './email.js';\r\nimport './css/bootstrap.min.css';\r\nimport './css/shopping-list-app.css';\r\n\r\nclass SearchBar extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\r\n  }\r\n\r\n  handleFilterTextChange(e) {\r\n    this.props.filterText(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n        className=\"form-control\"\r\n        value={this.props.value}\r\n        onChange={(e) => this.handleFilterTextChange(e)}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nclass ToggleButton extends React.Component {\r\n  render(){\r\n    const  btnToggled = this.props.toggleButton.toLowerCase() === this.props.label.toLowerCase() ? \" btn-toggled\" : \"\";\r\n\r\n    return (\r\n      <button  type=\"button\" className={\"btn btn-look\" +  btnToggled} onClick={(label) => this.props.handleClick(this.props.label)}>{this.props.label}</button>\r\n    )\r\n  }\r\n}\r\n\r\nfunction ProductRow(props) {\r\n    return (\r\n      <tr onClick = {props.handleClick} className={props.isClicked ? \"bold\" : \"\"}><td>{props.name}</td></tr>\r\n    )\r\n}\r\n\r\nclass ProductTable extends React.Component {\r\n  render() {\r\n    const productRows = [];\r\n    for (let i = 0; i < this.props.products.length; i++){\r\n\r\n      if (\r\n        this.props.products[i].name.toLowerCase().includes(this.props.filterText.toLowerCase()) &&\r\n\r\n        (this.props.toggleButton === \"all\" ||\r\n        this.props.toggleButton === this.props.products[i].category.toLowerCase())\r\n      ){\r\n\r\n        const clicked = isClicked(this.props.products[i].name, this.props.selectedProducts)\r\n        productRows[i] = <ProductRow\r\n                            key={\"product-row-\" + i}\r\n                            name={this.props.products[i].name}\r\n                            handleClick={() => this.props.handleClick(i)}\r\n                            isClicked={clicked}\r\n                          />;\r\n      }\r\n    }\r\n\r\n    return(\r\n      <table className=\"table table-hover table-sm\">\r\n        <tbody>\r\n          {productRows}\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n}\r\n\r\nclass QuantityCounter extends React.Component {\r\n  render () {\r\n    const hidden = this.props.hover ? \"\" : \" hidden\"\r\n    return (\r\n      <div className=\"row align-items-center\">\r\n        <div className={\"col counter\" + hidden}>\r\n          <div className=\"row counter-button counter-button-add\" onClick={this.props.counterChangeAdd}></div>\r\n          <div className=\"row counter-button counter-button-remove\" onClick={this.props.counterChangeRemove}></div>\r\n        </div>\r\n        <div className=\"col counter scroll-offset\">{this.props.quantity}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass ShoppingListRow extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      hover: false,\r\n    }\r\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\r\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\r\n  }\r\n\r\n  handleMouseEnter() {\r\n    this.setState({hover:!this.state.hover})\r\n  }\r\n\r\n  handleMouseLeave() {\r\n    this.setState({hover:!this.state.hover})\r\n  }\r\n\r\n  render() {\r\n    /*========== single or set  ==========*/\r\n    let content = \"\"\r\n    if (this.props.type === \"Single\") {\r\n      content = this.props.name;\r\n    } else {\r\n      const index = findIndexByName(this.props.name, this.props.products);\r\n      const product = this.props.products[index];\r\n      var components = \"\";\r\n\r\n      for (let i = 0; i < 10; i++) {\r\n        if (product.hasOwnProperty(\"ingNam\" + i)) {\r\n          components = components + (product[\"ingNam\" + i] + \"\\u00A0\" + product[\"ingQty\" + i]+ \",\\u00A0\")\r\n\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n      content = <span>{this.props.name}\r\n                  <p className=\"list-description\">{components}</p>\r\n                </span>;\r\n    }\r\n\r\n    return (\r\n      <tr\r\n        onMouseEnter={this.handleMouseEnter}\r\n        onMouseLeave={this.handleMouseLeave}\r\n      >\r\n        <td onClick={this.props.handleClick}>{content}</td>\r\n        <td className=\"counter-table vertical-align-middle\">\r\n          <QuantityCounter\r\n            hover={this.state.hover}\r\n            quantity={this.props.quantity}\r\n            counterChangeAdd={this.props.counterChangeAdd}\r\n            counterChangeRemove={this.props.counterChangeRemove}\r\n          />\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nclass ShoppingList extends React.Component {\r\n\r\n  whatRowType(i) {\r\n     const productName = this.props.selectedProducts[i].name;\r\n     const products = this.props.products;\r\n     for (let i = 0; i < products.length; i++) {\r\n       if (products[i].name === productName) {\r\n         return products[i].category;\r\n       }\r\n     }\r\n   }\r\n\r\n   compareByName(a, b) {\r\n     if ( a.props.name < b.props.name ){\r\n       return -1;\r\n     }\r\n     if ( a.props.name > b.props.name ){\r\n       return 1;\r\n     }\r\n     return 0;\r\n   }\r\n\r\n  render () {\r\n    const productRows = [];\r\n    for (let i = 0; i < this.props.selectedProducts.length; i++){\r\n      productRows[i] = <ShoppingListRow\r\n                          key={\"product-row-\" + i}\r\n                          name={this.props.selectedProducts[i].name}\r\n                          quantity={this.props.selectedProducts[i].quantity}\r\n                          type={this.whatRowType(i)}\r\n                          handleClick={() => this.props.handleClick(i)}\r\n                          counterChangeAdd={(action) => this.props.counterChange(i, \"add\")}\r\n                          counterChangeRemove={(action) => this.props.counterChange(i, \"remove\")}\r\n                          products={PRODUCTS}\r\n                        />;\r\n    }\r\n\r\n    productRows.sort(this.compareByName);\r\n\r\n    return (\r\n      <table className=\"table table-hover table-sm\">\r\n        <tbody>\r\n          {productRows}\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n}\r\n\r\nclass OnlyProductsRow extends React.Component {\r\n  render() {\r\n    const content = this.props.name;\r\n    const quantity = this.props.quantity;\r\n    return (\r\n      <tr>\r\n        <td>{content}</td>\r\n        <td>{quantity}</td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nclass OnlyProducts extends React.Component {\r\n  render() {\r\n    const products = this.props.products;\r\n    const selectedProducts = this.props.selectedProducts;\r\n    const onlyProductsList = [];\r\n\r\n    for (let i = 0; i < selectedProducts.length; i++){\r\n      let productIndex = findIndexByName(selectedProducts[i].name, products);\r\n\r\n      if (products[productIndex].category === \"Single\") {\r\n        onlyProductsList.push({\r\n                                name: selectedProducts[i].name,\r\n                                quantity: selectedProducts[i].quantity});\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < selectedProducts.length; i++){\r\n      let product = products[findIndexByName(selectedProducts[i].name, products)];\r\n\r\n      if (product.category === \"Set\") {\r\n\r\n        for (let j = 0; j < 10; j++) {\r\n          if (product.hasOwnProperty(\"ingNam\" + j)) {\r\n            let ingNam = product[\"ingNam\" + j];\r\n            let ingQty = product[\"ingQty\" + j];\r\n            let selectedQty = selectedProducts[i].quantity;\r\n\r\n            if (isClicked(ingNam, onlyProductsList)){\r\n              onlyProductsList[findIndexByName(ingNam, onlyProductsList)].quantity += selectedQty * ingQty;\r\n\r\n            } else {\r\n              onlyProductsList.push({\r\n                                      name: ingNam,\r\n                                      quantity: ingQty * selectedQty});\r\n            }\r\n\r\n          } else {\r\n            break;\r\n          }\r\n        }\r\n\r\n      //  console.log(products[productIndex].ingNam2);\r\n      //  onlyProductsList.push({\r\n            //                    name: products[productIndex].ingNam0,\r\n              //                  quantity: products[productIndex].ingQty0});\r\n\r\n        //onlyProductsList[findIndexByName(products[productIndex].ingNam1, onlyProductsList)].quantity += 3;\r\n      }\r\n    }\r\n\r\n    const productRows = [];\r\n    for (let i = 0; i < onlyProductsList.length; i++){\r\n          productRows[i] = <OnlyProductsRow\r\n                            name = {onlyProductsList[i].name}\r\n                            quantity = {onlyProductsList[i].quantity}\r\n                            key = {\"onlyProductRow\" + i}\r\n                           />\r\n    }\r\n\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"height-300\">\r\n          <table className=\"table table-hover table-sm\">\r\n            <tbody>\r\n              {productRows}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div>\r\n          <SendEmail />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedProducts: [\r\n        //{name: \"cebula\", quantity:5},\r\n      ],\r\n      toggleButton: \"all\",\r\n      filterText: \"\",\r\n      previewShown: false\r\n    }\r\n  }\r\n\r\n  selectingProduct(i) {\r\n    const selectedProduct = [{name: this.props.products[i].name, quantity: 1}]\r\n    if (!isClicked(selectedProduct[0].name, this.state.selectedProducts)){\r\n      this.setState({selectedProducts: this.state.selectedProducts.concat(selectedProduct)})\r\n    }\r\n  }\r\n\r\n  removeProduct(i) {\r\n    const updatedList1 = this.state.selectedProducts.slice(0, i);\r\n    const updatedList2 = this.state.selectedProducts.slice(i+1);\r\n    const updatedList = updatedList1.concat(updatedList2);\r\n    this.setState({selectedProducts: updatedList});\r\n  }\r\n\r\n  counterChange(i, action) {\r\n    const selectedProducts = this.state.selectedProducts.slice();\r\n    const counter = selectedProducts[i].quantity;\r\n    if (action === \"add\") {\r\n      selectedProducts[i].quantity = counter + 1;\r\n      this.setState({selectedProducts:selectedProducts});\r\n    } else if (action === \"remove\") {\r\n      if (counter > 0) {\r\n        selectedProducts[i].quantity = counter - 1\r\n        this.setState({selectedProducts:selectedProducts});\r\n      }\r\n    }\r\n  }\r\n\r\n  filterText(input) {\r\n    this.setState({filterText: input});\r\n  }\r\n\r\n  toggleButton(label) {\r\n    this.setState({toggleButton: label.toLowerCase()});\r\n  }\r\n\r\n  whatLabel() {\r\n    if (this.state.previewShown){\r\n      return \"Back\"\r\n    } else {\r\n      return \"Preview\"\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const clear = [];\r\n    let contentToShow = <div>oko</div>\r\n    if (!this.state.previewShown) {\r\n      contentToShow =\r\n            <div className=\"row\" >\r\n              <div className=\"col-6\">\r\n                <p className=\"text-center\">Products</p>\r\n                <SearchBar\r\n                  filterText={(input) => this.filterText(input)}\r\n                  value={this.state.filterText}/>\r\n                <div className=\"row justify-content-around list-filter-buttons\">\r\n                  <ToggleButton label=\"All\" toggleButton={this.state.toggleButton} handleClick={(label) => this.toggleButton(label)}/>\r\n                  <ToggleButton label=\"Single\" toggleButton={this.state.toggleButton} handleClick={(label) => this.toggleButton(label)}/>\r\n                  <ToggleButton label=\"Set\" toggleButton={this.state.toggleButton} handleClick={(label) => this.toggleButton(label)}/>\r\n                </div>\r\n                <div className=\"product-list-height-const\">\r\n                  <ProductTable\r\n                    products={this.props.products}\r\n                    handleClick={(i) => this.selectingProduct(i)}\r\n                    selectedProducts={this.state.selectedProducts}\r\n                    toggleButton={this.state.toggleButton}\r\n                    filterText={this.state.filterText}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <p className=\"text-center\">Shopping List Preview</p>\r\n                  <div className=\"shopping-list-height-const\">\r\n                    <ShoppingList\r\n                      selectedProducts={this.state.selectedProducts}\r\n                      products={this.props.products}\r\n                      handleClick={(i) => this.removeProduct(i)}\r\n                      counterChange={(i, action) => this.counterChange(i, action)}\r\n                    />\r\n                  </div>\r\n\r\n                </div>\r\n              </div>;\r\n            } else {\r\n              contentToShow =\r\n              <div className=\"row justify-content-center\">\r\n                <div className=\"only-products-list\">\r\n                  <center>Only Products List to send</center>\r\n                  <OnlyProducts\r\n                    selectedProducts={this.state.selectedProducts}\r\n                    products={this.props.products}\r\n                  />\r\n                </div>\r\n              </div>\r\n            }\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"container\" id=\"app\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12 text-center\">\r\n                <h1 className=\"display-4\">\r\n                  Shopping List App\r\n                </h1>\r\n              </div>\r\n            </div>\r\n            {contentToShow}\r\n            <div className=\"row justify-content-center list-filter-buttons\">\r\n              <button  type=\"button\" className={\"btn btn-look\"} onClick={() => this.setState({previewShown: !this.state.previewShown})}>{this.whatLabel()}</button>\r\n              <button  type=\"button\" className={\"btn btn-look\"} onClick={() => this.setState({selectedProducts: clear, previewShown: !this.state.previewShown})}>Clear</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nfunction isClicked(name, list) {\r\n  for (let i= 0; i < list.length; i++) {\r\n    if (list[i].name === name) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction findIndexByName(name, list) {\r\n   for (let i = 0; i < list.length; i++) {\r\n     if (list[i].name === name) {\r\n       return i;\r\n     }\r\n   }\r\n }\r\n\r\nfunction compareByName(a, b) {\r\n  if ( a.name < b.name ){\r\n    return -1;\r\n  }\r\n  if ( a.name > b.name ){\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction copyToClipboard(text) {\r\n  /* Get the text field */\r\n  var copyText = document.getElementById(\"myInput\");\r\n\r\n  /* Select the text field */\r\n  copyText.select();\r\n  copyText.setSelectionRange(0, 99999); /*For mobile devices*/\r\n\r\n  /* Copy the text inside the text field */\r\n  document.execCommand(\"copy\");\r\n\r\n  /* Alert the copied text */\r\n  alert(\"Copied the text: \" + copyText.value);\r\n}\r\n\r\nconst productsInput = [\r\n  {category: 'Set', name: 'Curry z dynią',\r\n    ingNam0: 'Olej', ingQty0: '1',\r\n    ingNam1: 'Cebula', ingQty1: '1',\r\n    ingNam2: 'Czosnek', ingQty2: '1',\r\n    ingNam3: 'Pomidory w puszce', ingQty3: '1',\r\n    ingNam4: 'Mięso mielone', ingQty4: '1'},\r\n  {category: 'Single', shopPosition1: '1', shopPosition2: '5', name: 'Chleb'},\r\n  {category: 'Single', shopPosition1: '6', shopPosition2: '5', name: 'Mleko'},\r\n  {category: 'Single', shopPosition1: '3', shopPosition2: '6', name: 'Woda'},\r\n  {category: 'Single', shopPosition1: '7', shopPosition2: '4', name: 'Banan'},\r\n  {category: 'Single', shopPosition1: '5', shopPosition2: '8', name: 'Cytryna'},\r\n  {category: 'Single', shopPosition1: '9', shopPosition2: '2', name: 'Cebula'},\r\n  {category: 'Single', shopPosition1: '7', shopPosition2: '9', name: 'Pomidory w puszce'},\r\n  {category: 'Single', shopPosition1: '4', shopPosition2: '8', name: 'Fasola'},\r\n  {category: 'Single', shopPosition1: '3', shopPosition2: '4', name: 'Marchewka'},\r\n  {category: 'Single', shopPosition1: '6', shopPosition2: '9', name: 'Jogurt'},\r\n  {category: 'Single', shopPosition1: '6', shopPosition2: '1', name: 'Twaróg'},\r\n  {category: 'Single', shopPosition1: '4', shopPosition2: '8', name: 'Płatki owsiane'},\r\n  {category: 'Single', shopPosition1: '2', shopPosition2: '5', name: 'Płatki orkiszowe'},\r\n  {category: 'Single', shopPosition1: '7', shopPosition2: '1', name: 'Płatki do mleka'},\r\n  {category: 'Single', shopPosition1: '9', shopPosition2: '7', name: 'Płatki Jaglane'},\r\n  {category: 'Single', shopPosition1: '1', shopPosition2: '5', name: 'Pietruszka'},\r\n  {category: 'Single', shopPosition1: '8', shopPosition2: '2', name: 'Szczypiorek'},\r\n  {category: 'Set', name: 'Spaghetti',\r\n    ingNam0: 'Olej', ingQty0: '1',\r\n    ingNam1: 'Cebula', ingQty1: '1',\r\n    ingNam2: 'Czosnek', ingQty2: '1',\r\n    ingNam3: 'Pomidory w puszce', ingQty3: '1',\r\n    ingNam4: 'Mięso mielone', ingQty4: '1'},\r\n  {category: 'Set', name: 'Chilli S. Jurka',\r\n    ingNam0: 'Olej', ingQty0: '1',\r\n    ingNam1: 'Cebula', ingQty1: '1',\r\n    ingNam2: 'Czosnek', ingQty2: '1',\r\n    ingNam3: 'Pomidory w puszce', ingQty3: '1',\r\n    ingNam4: 'Mięso mielone', ingQty4: '1'},\r\n];\r\nconst PRODUCTS = productsInput.sort(compareByName);\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <App products={PRODUCTS}/>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}